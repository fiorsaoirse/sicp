#lang sicp

(#%require rackunit)

(define (square x) (* x x))

(define (f g)
    (g 2)
)

(f square) ; - вызов функции square с параметром 2 => 4

(f (lambda (x) (* x (+ x 1)))) ; - в лямбду вместо x подставим 2, в результате имеем выражение (* 2 (+ 2 1)) => 6

;(f f)
; - рекурсивный вызов функции f, где вместо g подставлена 2 - (2 2) => ошибка, на месте, где ожидалась процедура, был передан аргумент