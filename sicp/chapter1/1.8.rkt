#lang sicp

(#%require rackunit)

(define (квадрат x) (* x x))

(define (куб x) (* x x x))

; если разница между предыдущим приближением и текущим приближением составляет менее 0.0001, время остановиться
(define (достаточно_близко? предыдущее_приближение приближение)
    (< (abs (/ (- приближение предыдущее_приближение)
                приближение)
        )
        0.0001
    )
)

(define (улучшить_приближение приближение исходное_число)
  (/ (+ (/ исходное_число (квадрат приближение))
        (* 2 приближение))
     3))

(define (кубическая_итерация предыдущее_приближение приближение исходное_число)
    (if (достаточно_близко? предыдущее_приближение приближение)
         приближение
         (кубическая_итерация приближение 
                              (улучшить_приближение приближение исходное_число)
                              исходное_число)
    )
)

(define (кубический_корень число)
    (кубическая_итерация 0 1.0 число)
)

(кубический_корень 27)
(кубический_корень 8)
(кубический_корень 125)